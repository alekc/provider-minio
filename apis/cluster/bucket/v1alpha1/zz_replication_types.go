// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ReplicationInitParameters struct {

	// (String) Name of the bucket on which to setup replication rules
	// Name of the bucket on which to setup replication rules
	// +crossplane:generate:reference:type=github.com/alekc/provider-minio/apis/cluster/bucket/v1alpha1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in bucket to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in bucket to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// (Block List) Rule definitions (see below for nested schema)
	// Rule definitions
	Rule []RuleInitParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ReplicationObservation struct {

	// (String) Name of the bucket on which to setup replication rules
	// Name of the bucket on which to setup replication rules
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List) Rule definitions (see below for nested schema)
	// Rule definitions
	Rule []RuleObservation `json:"rule,omitempty" tf:"rule,omitempty"`
}

type ReplicationParameters struct {

	// (String) Name of the bucket on which to setup replication rules
	// Name of the bucket on which to setup replication rules
	// +crossplane:generate:reference:type=github.com/alekc/provider-minio/apis/cluster/bucket/v1alpha1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in bucket to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in bucket to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// (Block List) Rule definitions (see below for nested schema)
	// Rule definitions
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type RuleInitParameters struct {

	// (Boolean) Whether or not to synchronise marker deletion
	// Whether or not to synchronise marker deletion
	DeleteMarkerReplication *bool `json:"deleteMarkerReplication,omitempty" tf:"delete_marker_replication,omitempty"`

	// (Boolean) Whether or not to propagate deletion
	// Whether or not to propagate deletion
	DeleteReplication *bool `json:"deleteReplication,omitempty" tf:"delete_replication,omitempty"`

	// (Boolean) Whether or not this rule is enabled
	// Whether or not this rule is enabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean) Whether or not to synchronise object created prior the replication configuration
	// Whether or not to synchronise object created prior the replication configuration
	ExistingObjectReplication *bool `json:"existingObjectReplication,omitempty" tf:"existing_object_replication,omitempty"`

	// way replication
	// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
	MetadataSync *bool `json:"metadataSync,omitempty" tf:"metadata_sync,omitempty"`

	// (String) Bucket prefix object must be in to be syncronised
	// Bucket prefix object must be in to be syncronised
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Map of String) Tags which objects must have to be syncronised
	// Tags which objects must have to be syncronised
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (Block List, Min: 1, Max: 1) Bucket prefix (see below for nested schema)
	// Bucket prefix
	Target []TargetInitParameters `json:"target,omitempty" tf:"target,omitempty"`
}

type RuleObservation struct {

	// (String) Rule ARN genrated by MinIO
	// Rule ARN genrated by MinIO
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// (Boolean) Whether or not to synchronise marker deletion
	// Whether or not to synchronise marker deletion
	DeleteMarkerReplication *bool `json:"deleteMarkerReplication,omitempty" tf:"delete_marker_replication,omitempty"`

	// (Boolean) Whether or not to propagate deletion
	// Whether or not to propagate deletion
	DeleteReplication *bool `json:"deleteReplication,omitempty" tf:"delete_replication,omitempty"`

	// (Boolean) Whether or not this rule is enabled
	// Whether or not this rule is enabled
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean) Whether or not to synchronise object created prior the replication configuration
	// Whether or not to synchronise object created prior the replication configuration
	ExistingObjectReplication *bool `json:"existingObjectReplication,omitempty" tf:"existing_object_replication,omitempty"`

	// (String) The ID of this resource.
	// Rule ID generated by MinIO
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// way replication
	// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
	MetadataSync *bool `json:"metadataSync,omitempty" tf:"metadata_sync,omitempty"`

	// (String) Bucket prefix object must be in to be syncronised
	// Bucket prefix object must be in to be syncronised
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Map of String) Tags which objects must have to be syncronised
	// Tags which objects must have to be syncronised
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (Block List, Min: 1, Max: 1) Bucket prefix (see below for nested schema)
	// Bucket prefix
	Target []TargetObservation `json:"target,omitempty" tf:"target,omitempty"`
}

type RuleParameters struct {

	// (Boolean) Whether or not to synchronise marker deletion
	// Whether or not to synchronise marker deletion
	// +kubebuilder:validation:Optional
	DeleteMarkerReplication *bool `json:"deleteMarkerReplication,omitempty" tf:"delete_marker_replication,omitempty"`

	// (Boolean) Whether or not to propagate deletion
	// Whether or not to propagate deletion
	// +kubebuilder:validation:Optional
	DeleteReplication *bool `json:"deleteReplication,omitempty" tf:"delete_replication,omitempty"`

	// (Boolean) Whether or not this rule is enabled
	// Whether or not this rule is enabled
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Boolean) Whether or not to synchronise object created prior the replication configuration
	// Whether or not to synchronise object created prior the replication configuration
	// +kubebuilder:validation:Optional
	ExistingObjectReplication *bool `json:"existingObjectReplication,omitempty" tf:"existing_object_replication,omitempty"`

	// way replication
	// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
	// +kubebuilder:validation:Optional
	MetadataSync *bool `json:"metadataSync,omitempty" tf:"metadata_sync,omitempty"`

	// (String) Bucket prefix object must be in to be syncronised
	// Bucket prefix object must be in to be syncronised
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// (Number) Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Map of String) Tags which objects must have to be syncronised
	// Tags which objects must have to be syncronised
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (Block List, Min: 1, Max: 1) Bucket prefix (see below for nested schema)
	// Bucket prefix
	// +kubebuilder:validation:Optional
	Target []TargetParameters `json:"target" tf:"target,omitempty"`
}

type TargetInitParameters struct {

	// (String) Access key for the replication service account in the target MinIO
	// Access key for the replication service account in the target MinIO
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	BandwidthLimit *string `json:"bandwidthLimit,omitempty" tf:"bandwidth_limit,omitempty"`

	// (String) Name of the bucket on which to setup replication rules
	// The name of the existing target bucket to replicate into
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// (Boolean) Disable proxy for this target
	// Disable proxy for this target
	DisableProxy *bool `json:"disableProxy,omitempty" tf:"disable_proxy,omitempty"`

	// (String) Period where the health of this target will be checked. This must be a valid duration, such as 5s or 2m
	// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
	HealthCheckPeriod *string `json:"healthCheckPeriod,omitempty" tf:"health_check_period,omitempty"`

	// (String) The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for example.com/minio/, the path would be /minio/
	// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). auto allows MinIO to chose automatically the appropriate option (Recommened)`
	// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
	PathStyle *string `json:"pathStyle,omitempty" tf:"path_style,omitempty"`

	// (String) Region of the target MinIO. This will be used to generate the target ARN
	// Region of the target MinIO. This will be used to generate the target ARN
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String, Sensitive) Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// (Boolean) Whether to use HTTPS with this target (Recommended)
	Secure *bool `json:"secure,omitempty" tf:"secure,omitempty"`

	// (String) The storage class to use for the object on this target
	// The storage class to use for the object on this target
	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`

	// (Boolean) Use synchronous replication.
	// Use synchronous replication.
	Syncronous *bool `json:"syncronous,omitempty" tf:"syncronous,omitempty"`
}

type TargetObservation struct {

	// (String) Access key for the replication service account in the target MinIO
	// Access key for the replication service account in the target MinIO
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	BandwidthLimit *string `json:"bandwidthLimit,omitempty" tf:"bandwidth_limit,omitempty"`

	// (String) Name of the bucket on which to setup replication rules
	// The name of the existing target bucket to replicate into
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// (Boolean) Disable proxy for this target
	// Disable proxy for this target
	DisableProxy *bool `json:"disableProxy,omitempty" tf:"disable_proxy,omitempty"`

	// (String) Period where the health of this target will be checked. This must be a valid duration, such as 5s or 2m
	// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
	HealthCheckPeriod *string `json:"healthCheckPeriod,omitempty" tf:"health_check_period,omitempty"`

	// (String) The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// (String) Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for example.com/minio/, the path would be /minio/
	// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). auto allows MinIO to chose automatically the appropriate option (Recommened)`
	// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
	PathStyle *string `json:"pathStyle,omitempty" tf:"path_style,omitempty"`

	// (String) Region of the target MinIO. This will be used to generate the target ARN
	// Region of the target MinIO. This will be used to generate the target ARN
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (Boolean) Whether to use HTTPS with this target (Recommended)
	Secure *bool `json:"secure,omitempty" tf:"secure,omitempty"`

	// (String) The storage class to use for the object on this target
	// The storage class to use for the object on this target
	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`

	// (Boolean) Use synchronous replication.
	// Use synchronous replication.
	Syncronous *bool `json:"syncronous,omitempty" tf:"syncronous,omitempty"`
}

type TargetParameters struct {

	// (String) Access key for the replication service account in the target MinIO
	// Access key for the replication service account in the target MinIO
	// +kubebuilder:validation:Optional
	AccessKey *string `json:"accessKey" tf:"access_key,omitempty"`

	// (String) Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	// +kubebuilder:validation:Optional
	BandwidthLimit *string `json:"bandwidthLimit,omitempty" tf:"bandwidth_limit,omitempty"`

	// (String) Name of the bucket on which to setup replication rules
	// The name of the existing target bucket to replicate into
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// (Boolean) Disable proxy for this target
	// Disable proxy for this target
	// +kubebuilder:validation:Optional
	DisableProxy *bool `json:"disableProxy,omitempty" tf:"disable_proxy,omitempty"`

	// (String) Period where the health of this target will be checked. This must be a valid duration, such as 5s or 2m
	// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
	// +kubebuilder:validation:Optional
	HealthCheckPeriod *string `json:"healthCheckPeriod,omitempty" tf:"health_check_period,omitempty"`

	// (String) The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// (String) Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for example.com/minio/, the path would be /minio/
	// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). auto allows MinIO to chose automatically the appropriate option (Recommened)`
	// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
	// +kubebuilder:validation:Optional
	PathStyle *string `json:"pathStyle,omitempty" tf:"path_style,omitempty"`

	// (String) Region of the target MinIO. This will be used to generate the target ARN
	// Region of the target MinIO. This will be used to generate the target ARN
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String, Sensitive) Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// (Boolean) Whether to use HTTPS with this target (Recommended)
	// +kubebuilder:validation:Optional
	Secure *bool `json:"secure,omitempty" tf:"secure,omitempty"`

	// (String) The storage class to use for the object on this target
	// The storage class to use for the object on this target
	// +kubebuilder:validation:Optional
	StorageClass *string `json:"storageClass,omitempty" tf:"storage_class,omitempty"`

	// (Boolean) Use synchronous replication.
	// Use synchronous replication.
	// +kubebuilder:validation:Optional
	Syncronous *bool `json:"syncronous,omitempty" tf:"syncronous,omitempty"`
}

// ReplicationSpec defines the desired state of Replication
type ReplicationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReplicationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReplicationInitParameters `json:"initProvider,omitempty"`
}

// ReplicationStatus defines the observed state of Replication.
type ReplicationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReplicationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Replication is the Schema for the Replications API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,minio}
type Replication struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReplicationSpec   `json:"spec"`
	Status            ReplicationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReplicationList contains a list of Replications
type ReplicationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Replication `json:"items"`
}

// Repository type metadata.
var (
	Replication_Kind             = "Replication"
	Replication_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Replication_Kind}.String()
	Replication_KindAPIVersion   = Replication_Kind + "." + CRDGroupVersion.String()
	Replication_GroupVersionKind = CRDGroupVersion.WithKind(Replication_Kind)
)

func init() {
	SchemeBuilder.Register(&Replication{}, &ReplicationList{})
}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceAccountInitParameters struct {

	// (String) Description of service account (256 bytes max), can't be cleared once set
	// Description of service account (256 bytes max), can't be cleared once set
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disable service account
	// Disable service account
	DisableUser *bool `json:"disableUser,omitempty" tf:"disable_user,omitempty"`

	// (String) Expiration of service account. Must be between NOW+15min & NOW+365d
	// Expiration of service account. Must be between NOW+15min & NOW+365d
	Expiration *string `json:"expiration,omitempty" tf:"expiration,omitempty"`

	// (String) Name of service account (32 bytes max), can't be cleared once set
	// Name of service account (32 bytes max), can't be cleared once set
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) policy of service account as encoded JSON string
	// policy of service account as encoded JSON string
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String) User the service account will be created for
	// User the service account will be created for
	// +crossplane:generate:reference:type=github.com/alekc/provider-minio/apis/iam/v1alpha1.User
	TargetUser *string `json:"targetUser,omitempty" tf:"target_user,omitempty"`

	// Reference to a User in iam to populate targetUser.
	// +kubebuilder:validation:Optional
	TargetUserRef *v1.Reference `json:"targetUserRef,omitempty" tf:"-"`

	// Selector for a User in iam to populate targetUser.
	// +kubebuilder:validation:Optional
	TargetUserSelector *v1.Selector `json:"targetUserSelector,omitempty" tf:"-"`

	// (Boolean) rotate secret key
	// rotate secret key
	UpdateSecret *bool `json:"updateSecret,omitempty" tf:"update_secret,omitempty"`
}

type ServiceAccountObservation struct {

	// (String) access key of service account
	// access key of service account
	AccessKey *string `json:"accessKey,omitempty" tf:"access_key,omitempty"`

	// (String) Description of service account (256 bytes max), can't be cleared once set
	// Description of service account (256 bytes max), can't be cleared once set
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disable service account
	// Disable service account
	DisableUser *bool `json:"disableUser,omitempty" tf:"disable_user,omitempty"`

	// (String) Expiration of service account. Must be between NOW+15min & NOW+365d
	// Expiration of service account. Must be between NOW+15min & NOW+365d
	Expiration *string `json:"expiration,omitempty" tf:"expiration,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of service account (32 bytes max), can't be cleared once set
	// Name of service account (32 bytes max), can't be cleared once set
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) policy of service account as encoded JSON string
	// policy of service account as encoded JSON string
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String)
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// (String) User the service account will be created for
	// User the service account will be created for
	TargetUser *string `json:"targetUser,omitempty" tf:"target_user,omitempty"`

	// (Boolean) rotate secret key
	// rotate secret key
	UpdateSecret *bool `json:"updateSecret,omitempty" tf:"update_secret,omitempty"`
}

type ServiceAccountParameters struct {

	// (String) Description of service account (256 bytes max), can't be cleared once set
	// Description of service account (256 bytes max), can't be cleared once set
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disable service account
	// Disable service account
	// +kubebuilder:validation:Optional
	DisableUser *bool `json:"disableUser,omitempty" tf:"disable_user,omitempty"`

	// (String) Expiration of service account. Must be between NOW+15min & NOW+365d
	// Expiration of service account. Must be between NOW+15min & NOW+365d
	// +kubebuilder:validation:Optional
	Expiration *string `json:"expiration,omitempty" tf:"expiration,omitempty"`

	// (String) Name of service account (32 bytes max), can't be cleared once set
	// Name of service account (32 bytes max), can't be cleared once set
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) policy of service account as encoded JSON string
	// policy of service account as encoded JSON string
	// +kubebuilder:validation:Optional
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String) User the service account will be created for
	// User the service account will be created for
	// +crossplane:generate:reference:type=github.com/alekc/provider-minio/apis/iam/v1alpha1.User
	// +kubebuilder:validation:Optional
	TargetUser *string `json:"targetUser,omitempty" tf:"target_user,omitempty"`

	// Reference to a User in iam to populate targetUser.
	// +kubebuilder:validation:Optional
	TargetUserRef *v1.Reference `json:"targetUserRef,omitempty" tf:"-"`

	// Selector for a User in iam to populate targetUser.
	// +kubebuilder:validation:Optional
	TargetUserSelector *v1.Selector `json:"targetUserSelector,omitempty" tf:"-"`

	// (Boolean) rotate secret key
	// rotate secret key
	// +kubebuilder:validation:Optional
	UpdateSecret *bool `json:"updateSecret,omitempty" tf:"update_secret,omitempty"`
}

// ServiceAccountSpec defines the desired state of ServiceAccount
type ServiceAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceAccountInitParameters `json:"initProvider,omitempty"`
}

// ServiceAccountStatus defines the observed state of ServiceAccount.
type ServiceAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceAccount is the Schema for the ServiceAccounts API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,minio}
type ServiceAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAccountSpec   `json:"spec"`
	Status            ServiceAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAccountList contains a list of ServiceAccounts
type ServiceAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAccount `json:"items"`
}

// Repository type metadata.
var (
	ServiceAccount_Kind             = "ServiceAccount"
	ServiceAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAccount_Kind}.String()
	ServiceAccount_KindAPIVersion   = ServiceAccount_Kind + "." + CRDGroupVersion.String()
	ServiceAccount_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAccount{}, &ServiceAccountList{})
}
